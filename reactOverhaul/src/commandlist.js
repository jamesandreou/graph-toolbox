import React from 'react'

export default class CommandList{
	
	constructor (){
		this.list = {
			Algorithms : {
				planar : {
					name : 'Planarity Test',
					desc : 'Find a planar embedding or K5 / K33 minor.',
					req : this.noReq
				},
				mincov : {
					name : 'Minimum Vertex Cover',
					desc : 'Find a cover with as few vertices as possible.',
					req : this.noReq
				},
				mst : {
					name : 'Minimum Spanning Tree',
					desc : 'Find the minimum spanning tree of the graph.',
					req : this.noReq
				},
				topo : {
					name : 'Topological Ordering',
					desc : 'If possible sort the graph topologically.',
					req : this.noReq
				}
			},
			Tools : {
				center : {
					name : 'Center Graph',
					desc : 'Center current graph on display.',
					req : this.noReq
				}
			},
			Graphs : {
				cube : {
					name : 'Bidiakis Cube',
					desc : '3-Regular Planar, 12 Vertices, 18 Edges',
					req : this.noReq
				},
				k5 : {
					name : 'K5',
					desc : '5 Vertice complete graph, NOT Planar',
					req : this.noReq
				}
			}
		};
	}

	noReq(g){
		return true;
	}

	getIcon(cmd, col){
		switch(cmd){
			case 'planar' :
				return (
					<g transform="translate(0,-32)">
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.1368243,0,0,1.1368243,26.972973,30.272841)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.1368243,0,0,1.1368243,16.972973,38.974179)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.1368243,0,0,1.1368243,36.972973,39.164372)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.1368243,0,0,1.1368243,7.843701,47.818161)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.1368243,0,0,1.1368243,-1.7610538,56.757239)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.1368243,0,0,1.1368243,20.491547,56.757239)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.1368243,0,0,1.1368243,54.298382,56.757239)" fill={col}/>
					<path strokeLinejoin="miter" d="m3.1857,28.814,9.7474-9.0342,9.2719-8.844,9.89-8.844,9.8425,9.4146,17.878,17.45-34.568-0.04755,16.689-17.593-20.065-0.0951,3.471,17.688z" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="1px" fill="none"/>
					</g>
				);
			case 'mincov' :
				return (
					<g transform="translate(0,-32)">
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,37.65851,32.577274)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,18.577093,32.789213)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,54.214406,55.969657)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,2.3244185,32.979362)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,2.2447592,56.369969)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,18.936952,56.106387)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,37.659315,56.097177)" fill={col}/>
					<path strokeLinejoin="miter" d="M6.7096,59.685,6.6522,36.282,22.99,36.156,42.34,36.191,42.46,59.778,23.479,59.678,23.175,36.216" stroke={col} strokeLinecap="butt" strokeWidth="0.91345334px" fill="none"/>
					<path strokeLinejoin="miter" d="M23.419,59.863,41.97,36.071,58.797,59.529" stroke={col} strokeLinecap="butt" strokeWidth="0.91345334px" fill="none"/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.6479094,-0.01269351,0.01269351,1.6479094,-0.38754577,30.826555)" stroke={col} strokeDasharray="none" stroke-miterlimit="4" strokeWidth="0.74418437" fill="none"/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.6479094,-0.01269351,0.01269351,1.6479094,34.946546,30.424468)" stroke={col} strokeDasharray="none" stroke-miterlimit="4" strokeWidth="0.74418437" fill="none"/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.6479094,-0.01269351,0.01269351,1.6479094,16.224988,53.953582)" stroke={col} strokeDasharray="none" stroke-miterlimit="4" strokeWidth="0.74418437" fill="none"/>
					</g>
				);
			case 'mst' :
				return(
					<g transform="translate(0,-32)">
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,28.596366,40.051505)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,49.978069,31.896506)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,-0.70153623,32.777632)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,11.658841,47.359348)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,38.168575,57.182283)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,50.839029,48.969372)" fill={col}/>
					<path strokeLinejoin="miter" d="M3.9674,4.4974,16.004,18.955,33.151,11.961,42.7,29.041" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="1px" fill="none"/>
					<path strokeLinejoin="miter" d="M55.812,20.838,33.42,11.692" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="1px" fill="none"/>
					<path strokeLinejoin="miter" d="M54.871,3.4215,33.622,11.625" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="1px" fill="none"/>
					</g>
				);
			case 'topo' :
				return (
					<g transform="translate(0,-32)">
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,28.192905,43.697726)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,-1.2394837,43.697726)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,12.331275,43.697726)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,41.530747,43.697726)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,55.277096,43.697726)" fill={col}/>
					<path strokeLinejoin="miter" d="m3.3622,15.324,29.856-0.06724s-20.644-9.2796-29.856,0.06724z" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="1px" fill="none"/>
					<path strokeLinejoin="miter" d="m45.995,15.391,14.323-0.06724" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="1px" fill="none"/>
					<path strokeLinejoin="miter" d="m17.416,15.055s13.381,12.575,29.184,0.40346" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="1px" fill="none"/>
					<path strokeLinejoin="miter" d="m17.013,14.987s26.561-12.709,43.238,0.40346" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="1px" fill="none"/>
					</g>
				);
			case 'k5' :
				return (
					<g transform="translate(0,-32)">
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,15.349408,57.785226)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,28.414873,30.786986)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,7.7587212,36.73803)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,39.715174,57.785226)" fill={col}/>
					<path d="m6.1813,3.5661a1.7593,1.7593,0,1,1,-3.5186,0,1.7593,1.7593,0,1,1,3.5186,0z" transform="matrix(1.0384052,-0.00799862,0.00799862,1.0384052,48.082048,36.73803)" fill={col}/>
					<path strokeLinejoin="miter" d="M12.507,8.3976,33.218,2.6146,52.853,8.7338,44.448,29.243,19.837,29.378,12.709,8.7338,44.179,28.974,33.017,3.0853,20.039,29.714,52.584,8.8683z" transform="translate(0,32)" stroke={col} strokeLinecap="butt" strokeWidth="0.8px" fill="none"/>
					</g>
				);
			case 'cube' :
				return (
					 <g transform="translate(0,-32)">
					  <path fill={col} d="m30.702,62.066c-0.37917-0.20473-0.8652-0.46556-1.0801-0.57964-0.21487-0.11407-0.53544-0.28504-0.71239-0.37994s-0.49753-0.26578-0.71239-0.37972c-0.21487-0.11395-0.84568-0.44997-1.4018-0.74671-0.55613-0.29674-1.1869-0.63332-1.4018-0.74795-0.21486-0.11463-0.51475-0.27472-0.66642-0.35577s-0.52396-0.27777-0.82729-0.43717c-0.30334-0.1594-0.84772-0.45195-1.2097-0.65012-0.362-0.19817-0.66701-0.36031-0.6778-0.36031-0.01077,0-0.20064-0.0999-0.42188-0.222s-0.67113-0.36325-0.99975-0.53589-0.77329-0.41035-0.98815-0.52825c-0.21487-0.1179-0.48491-0.25928-0.6001-0.31418-0.28145-0.13414-0.40148-0.25406-0.43366-0.43325-0.0148-0.08225-0.02087-3.8483-0.01358-8.369l0.01328-8.2194,0.12305-0.10584c0.06768-0.05821,0.2228-0.14216,0.3447-0.18656,0.12191-0.0444,0.33541-0.12773,0.47444-0.18518s0.52165-0.20859,0.85026-0.33585c1.0178-0.39416,1.9042-0.7397,2.5508-0.9944,0.34126-0.13442,0.86866-0.34015,1.172-0.45719s0.5929-0.23151,0.64345-0.25438c0.05053-0.02288,0.47454-0.18969,0.94219-0.3707,1.0871-0.42077,2.6526-1.0316,3.5849-1.3988,0.21486-0.08463,0.69056-0.27021,1.0571-0.41241,0.36653-0.1422,0.76333-0.29898,0.88177-0.34839,0.26877-0.11215,0.35673-0.11228,0.6264-0.000986,0.11844,0.04889,0.41182,0.16422,0.65197,0.25628,0.24014,0.09207,0.5297,0.20618,0.64345,0.25359,0.11376,0.04741,0.39296,0.15818,0.62047,0.24615,0.69743,0.2697,1.4452,0.56075,1.9993,0.7782,0.2907,0.11408,0.93185,0.36494,1.4248,0.55747,1.246,0.48667,3.0668,1.2,4.1135,1.6116,0.27806,0.10933,0.70205,0.27394,0.94219,0.3658,0.49018,0.1875,0.91226,0.35337,1.2869,0.50575,0.13903,0.05655,0.35253,0.13914,0.47443,0.18353,0.12191,0.0444,0.27703,0.12835,0.34471,0.18656l0.12305,0.10584,0.01206,8.2884c0.0083,5.6691-0.003,8.3251-0.03581,8.4045-0.05486,0.13314-0.06404,0.13955-0.6197,0.43437-0.2275,0.1207-0.47569,0.25534-0.55152,0.2992-0.07588,0.04386-0.40676,0.21992-0.73537,0.39125-0.32862,0.17133-0.81836,0.43272-1.0883,0.58086-0.26996,0.14814-0.50078,0.26935-0.51294,0.26935-0.01214,0-0.16355,0.08004-0.33645,0.17787-0.17289,0.09783-0.69697,0.37968-1.1646,0.62633-1.2595,0.66429-1.5819,0.83601-2.1142,1.1261-0.26542,0.14465-0.73077,0.39283-1.0341,0.55151-0.30334,0.15868-0.57221,0.30333-0.59749,0.32144-0.02527,0.0181-0.37688,0.2044-0.78133,0.41398-0.40446,0.20957-0.75606,0.39586-0.78133,0.41398-0.02527,0.0181-0.2838,0.15833-0.5745,0.31159s-0.83878,0.44564-1.218,0.64973c-0.37917,0.20409-0.74111,0.37107-0.80431,0.37107-0.06321,0-0.42513-0.1675-0.80431-0.37223zm0.35594-8.8389-0.01176-7.9332-0.33295-0.15586c-0.18313-0.08573-1.2533-0.57932-2.3782-1.0969-1.1249-0.51756-2.2521-1.0389-2.5048-1.1585-0.25278-0.11964-1.2145-0.56465-2.1372-0.98891-0.92266-0.42426-1.8637-0.85814-2.0912-0.96416s-0.49637-0.23028-0.59748-0.27613c-0.10111-0.04584-0.44908-0.20945-0.77326-0.36356s-0.63958-0.29279-0.70089-0.30818l-0.11148-0.02798v7.5624c0,7.4779,0.000759,7.5627,0.09034,7.5911,0.0497,0.01577,0.39253,0.19296,0.76187,0.39376,0.36933,0.2008,0.67957,0.36509,0.68942,0.36509,0.0099,0,0.31332,0.16193,0.6744,0.35984,0.62523,0.34269,1.0223,0.55442,2.1387,1.1404,0.27174,0.14264,0.71124,0.37767,0.97666,0.52229,0.26543,0.14462,0.69975,0.37721,0.96517,0.51686s0.677,0.35962,0.91462,0.48884c0.23762,0.12921,0.43789,0.23493,0.44505,0.23493,0.0068,0,0.33575,0.1758,0.7302,0.39066,0.39446,0.21487,0.7267,0.39067,0.73832,0.39067,0.01161,0,0.20216,0.10012,0.4234,0.2225,0.39995,0.22123,0.7858,0.42865,1.62,0.87086,0.24003,0.12724,0.44686,0.21448,0.4596,0.19385,0.01275-0.02063,0.01791-3.6074,0.01146-7.9707zm2.1719,7.3483c0.22751-0.12091,0.59466-0.31996,0.81591-0.44234s0.41251-0.22251,0.42503-0.22251,0.20378-0.1003,0.42503-0.22289,0.69182-0.37362,1.0457-0.55783c0.35389-0.18422,0.70549-0.3709,0.78132-0.41486,0.0758-0.04396,0.3447-0.1887,0.59749-0.32164,0.25278-0.13295,0.67676-0.36003,0.94219-0.50462s0.67906-0.36645,0.91921-0.49302c1.144-0.60295,2.0817-1.1035,2.4475-1.3064,0.22124-0.12277,0.41117-0.22321,0.42207-0.22321,0.01093,0,0.34254-0.1758,0.737-0.39066s0.73709-0.39066,0.76141-0.39066c0.02815,0,0.04424-2.7503,0.04424-7.5655v-7.5655l-0.10901,0.02736c-0.05994,0.01505-0.37536,0.15253-0.70089,0.30552-0.32554,0.15299-0.63325,0.29694-0.6838,0.3199-0.05053,0.02295-0.31943,0.14842-0.59749,0.2788-0.27806,0.13039-1.2605,0.58388-2.1831,1.0078-0.92266,0.42388-1.9429,0.89739-2.2673,1.0523-0.32437,0.15486-0.59718,0.28156-0.60626,0.28156-0.01502,0-0.23942,0.1029-1.125,0.51581-0.16431,0.07661-0.80546,0.37198-1.4248,0.65638-0.61932,0.2844-1.3069,0.60211-1.5279,0.70603l-0.4019,0.18893-0.01176,7.9287c-0.0068,4.3608-0.0046,7.9501,0.0038,7.9763,0.0087,0.02616,0.2052-0.054,0.43663-0.17814,0.23142-0.12414,0.6069-0.32463,0.83441-0.44553zm-1.4376-16.171c0.13343-0.0602,0.42874-0.19732,0.65624-0.3047,0.22751-0.10738,1.1892-0.55228,2.1372-0.98866,1.9441-0.89495,2.2628-1.0427,2.9339-1.36,0.26128-0.12353,0.4817-0.2246,0.48983-0.2246,0.0081,0,0.21834-0.09533,0.46714-0.21185,0.24879-0.11652,1.2073-0.55912,2.1299-0.98357,0.92266-0.42444,1.874-0.86518,2.1142-0.97942l0.437-0.206-0.138-0.053c-0.0758-0.02905-0.41709-0.16286-0.75835-0.29735s-0.95138-0.37354-1.3558-0.53122c-0.82815-0.32286-1.9498-0.76216-2.8725-1.1251-0.34126-0.13421-0.81695-0.32062-1.0571-0.41425-0.88365-0.34453-1.5061-0.58781-1.9993-0.78147-0.27807-0.10918-0.70205-0.27324-0.94219-0.36458s-0.5297-0.20627-0.64345-0.25539c-0.11376-0.04912-0.4033-0.1639-0.64345-0.25506-0.24014-0.09116-0.61759-0.23757-0.83878-0.32534l-0.40215-0.1596-0.40216,0.1596c-0.22118,0.08778-0.59863,0.23418-0.83878,0.32534-0.24014,0.09116-0.5297,0.20567-0.64345,0.25447-0.11376,0.0488-0.34126,0.13985-0.50557,0.20235-0.70309,0.26742-2.0951,0.81061-4.125,1.6097-0.34758,0.13682-0.88015,0.34521-1.1835,0.46308-0.30334,0.11787-0.91346,0.35676-1.3558,0.53087-0.44236,0.17411-1.1559,0.45239-1.5856,0.61839-0.42973,0.16601-0.83302,0.32379-0.89618,0.35062-0.13374,0.05681-0.28014-0.0174,2.4359,1.2346,0.92266,0.42533,1.843,0.84984,2.0452,0.94337,0.20223,0.09352,0.50212,0.23173,0.66643,0.30712s0.42284,0.19558,0.5745,0.2671c0.46796,0.22066,1.0412,0.48554,2.7347,1.2636,0.89738,0.4123,1.8177,0.83708,2.0452,0.94395,0.2275,0.10688,0.53774,0.25268,0.68941,0.32402s0.30103,0.13065,0.33191,0.13181c0.03088,0.0011,0.16531-0.04715,0.29874-0.10735z"/>
					 </g>
				);
			case 'center' :
				return (
					<g fill={col} transform="translate(0,-32)">
					<path d="m35.86,39.906,1.514,1.5353,8.2773-8.1625,2.0406,2.0693-8.2773,8.1625,1.536,1.5576-7.0397,1.807,1.9491-6.9692z"/>
					<path d="m35.86,55.983,1.514-1.5353,8.2773,8.1625,2.0406-2.0693-8.2773-8.1625,1.536-1.5576-7.0397-1.807,1.9491,6.9692z"/>
					<path d="m29.403,40.04-1.514,1.5353-8.2773-8.1625-2.0406,2.0693,8.2773,8.1625-1.536,1.5576,7.0397,1.807-1.9491-6.9692z"/>
					<path d="m29.403,55.849-1.514-1.5353-8.2773,8.1625-2.0406-2.0693,8.2773-8.1625-1.536-1.5576,7.0397-1.807-1.9491,6.9692z"/>
					</g>
				);
		}
	}

}